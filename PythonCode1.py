# -*- coding: utf-8 -*-
"""assignment1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q1N9gsGydgndqEgj-o9iTBjBI6BVHGvS
"""

from math import pi

def circumference(radius):
  return 2*pi*radius

print(circumference(3), circumference(8), circumference(2.5))

def calculate_tip(total, percentage):
  return (percentage/ 100) *total

print(calculate_tip(25, 15), calculate_tip(400, 18), calculate_tip(90,5))

def split_bill(total, percentage, people):
  return (total +((percentage/100) *total))/people

print(split_bill(200, 18, 5), split_bill(90, 15,3))

def maximum2(A,B):
  if A > B:
    return A
  else:
    return B

print(maximum2(12,1), maximum2(31,90))

def maximum3(A,B,C):
  if A > B and A > C:
    return A
  elif B > A and B > C:
    return B
  else:
    return C

print(maximum3(12,90,45), maximum3(15,61,65), maximum3(75,32,0))

def apply_discount(total):
  if total >= 150:
    return total - ((15/100) * total)
  elif total >= 100 and total <  150:
    return total - ((10/100)*total)
  elif total >= 50 and total < 100:
    return total - ((5/100)*total)
  else:
    return total

print(apply_discount(500), apply_discount(90), apply_discount(25))

def RPS(move_A, move_B):
  if move_A == "paper" and move_B == "rock"or move_A == "rock" and move_B =="scissors" or move_A == "scissors"and move_B == "paper" :
    return "A"
  elif move_B == "paper" and move_A == "rock"or move_B == "rock" and move_A =="scissors" or move_B == "scissors"and move_A == "paper" :
    return "B"
  else:
    return "T"

print(RPS("scissors", "rock"), RPS("paper", "rock"), RPS("rock", "rock"))

def mix_colors(color1, color2):
  if color1 == "red" and color2 == "blue"or color2 == "red" and color1 == "blue":
    return "Magenta"
  elif color1 =="blue" and color2 == "green"or color2 =="blue" and color1 == "green":
    return "Cyan"
  elif color1 =="red" and color2 == "green" or color2 =="red" and color1 == "green":
    return "Yellow"
  else:
    return "Unknown Color"

print(mix_colors("red","blue"), mix_colors("green", "red"), mix_colors("blue", "green"), mix_colors("yellow", "purple"))

def median(a, b, c):
  if a > b and a < c or a < b and a > c:
    return a
  elif b > c and  b < a or b > a and b < c:
    return b
  elif c > b and c < a or c > a and c < b:
    return c
  else:
    return "none"

print(median(2,3,6), median(9,6,5), median(12, 37, 7))