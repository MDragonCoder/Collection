# -*- coding: utf-8 -*-
"""Assignment5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dt-nfh4jYtuQDNfEx8HLJmP1MhQbRTzl
"""

def set_difference(S1, S2):
  New = set()
  for x  in S1:
      if( x not in S2):
        New.add(x)
  return New

A = {4, 5, 6, 7, 8, 9}
B = {1, 3, 4, 7, 9, 11, 12}
print(set_difference(A,B))
print(set_difference(B,A))

def all_intersect(S1, S2, S3):
  New = set()
  for x in S1:
    if x in S2  and  x in S3:
       New.add(x)
  return New

C = {1, 2, 3, 4}
D = {1, 3, 4, 6}
E = {1, 3, 5, 6}
F = {2, 6,0,9, 13, 45, 7}
print(all_intersect(C,D,E))
print(all_intersect(B,A,F))

def any_intersects(S1, S2, S3):
   New = set()
   for x in S1:
    if x in S2 and S3:
       New.add(x)
   for y in S2:
    if x in S1 or S3:
       New.add(y)
   return New

G = {1, 2, 3, 4}
H ={1, 3, 4, 6}
I = {1, 3, 5, 6}
print(any_intersects(G,H,I))

def pairwise_intersect(S1, S2, S3):
   New = set()
   for x in S1:
    if x in S2 and x not in S3:
       New.add(x)
   for x in S3:
    if x in S2 and x not in S1:
      New.add(x)
   return New

print(pairwise_intersect(G,H,I))
print(pairwise_intersect(H,G,I))

def largest_common(S1, S2):
  V = 0;
  for x in S1:
    if x in S2 and x > V:
      V = x
  return V

L = {1, 2, 3, 4, 5}
M =  {1, 3, 4, 6, 8, 9}
print(largest_common(L,M))

def repeated(A):
    New = set()
    repeats = set()

    for x in A:
        if x in New:
            repeats.add(x)
        else:
            New.add(x)

    return repeats

Z = [4, 6, 2, 7, 4, 2, 4]
A = [1,3,3,9,6,7,8,7,9,4,2]
print(repeated(Z))
print(repeated(A))

def unique(A):
    new = set()
    unique = set()

    for x in A:
        if x not in new:
            new.add(x)
            unique.add(x)
        elif x in unique:
            unique.remove(x)
    return unique

print(unique(Z))
print(unique(A))

