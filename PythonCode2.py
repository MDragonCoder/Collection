# -*- coding: utf-8 -*-
"""Assignment2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QHu86QXmrXU2I12pifxh0ywrm-om1g6V
"""

def minimum(A):
  min = A[0]
  for num in A:
    if num < min:
      min = num
  return min

A =[12,4,34,2,15]
B=[5,13,56,23]
C = [13,16,56]
print(minimum(A))
print(minimum(B))
print(minimum(C))

def average(A):
  total = 0
  for num in A:
    total += num
  return total /(len(A))

print(average(A))
D = [11, 46, 24, 10]
print(average(D))
print(average(C))

def search(A,key):
  for num in A:
    if num == key:
      return True
  return False

print(search(D,11))
D2 =[23, 65, 34, 98, 16, 70]
print(search(A,33))
print(search(D2,98))

def product(A):
  total = 1
  for num in A:
    total *= num
  return total

print(product(A))
E =[23, 13, 41, 35]
print(product(E))

def count_negative(A):
  count = 0
  for num in A:
    if num < 0:
      count +=1
  return count

F =[23, -45, -10, -86, 20, -22]
G = [12, -5, -7, -20,3]
print(count_negative(F))
print(count_negative(G))

def any_in_range(A,m,n):
  for num in A:
    if num >= m and num <= n:
      return True
  return False

G2 = [11, 46, 24, 57, 10]
G3 = [11, 46, 24, 17, 10]
print(any_in_range(G2,50,60))
print(any_in_range(G3, 50,60))

def all_in_range(A, m, n):
  for num in A:
    if num < m or num > n:
      return False
  return True

H = [51, 56, 54, 57, 50]
I =[51, 56, 54, 61, 50]
J = [30,300,70,23]
print(all_in_range(H, 50, 60))
print(all_in_range(I, 50, 60))
print(all_in_range(J, 50, 90))

def equal_adjacent(A):
  for x,y in zip(A, A[1:]):
    if x == y:
      return True
  return False

B =[10, 13, 53, 57, 57, 20, 90]
B2 = [10,20,45,50,53]
print(equal_adjacent(B))
print(equal_adjacent(B2))

def sorted(A):
  for x,y in zip(A, A[1:]):
    if x > y:
      return False
  return True

K = [10,20,20,30,40]
K2 = [10,20,20,15,40]
K3 = [10,20,30,35,50,60]

print(sorted(K))
print(sorted(K2))
print(sorted(K3))